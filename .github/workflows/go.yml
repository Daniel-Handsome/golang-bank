# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  Test:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: mypassword
          POSTGRES_USER: daniel
          POSTGRES_DB: test_db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
    
    - uses: actions/checkout@v3

### user/bin是二進觸發檔案 但如果是mock那種下載到go/bin的 可以用增加環境變數方式
### 這邊是在UI就沒差了
# https://www.youtube.com/watch?v=rL0aeMutoJ0
    - name: Install migrate
      run: |
          sudo cp .github/file/migrate.linux-amd64 /usr/bin
          sudo mv /usr/bin/migrate.linux-amd64 /usr/bin/migrate
          which migrate
    
    
    - name: run migration
      run: cd app && make migrate-up

    - name: Test
      run: cd app && make test
